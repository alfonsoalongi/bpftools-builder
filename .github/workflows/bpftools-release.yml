name: Build & Release bpftools (upstream workflow)

on:
  push:
    tags: [ 'v*' ]          # es. v0.1.0
  workflow_dispatch:        # avvio manuale

jobs:
  build:
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        arch: [ arm64 ]

    steps:
      # workspace (il tuo repo, puÃ² essere vuoto)
      - uses: actions/checkout@v4

      # 1) Clona ExtendedAndroidTools (shallow)
      - name: Clone ExtendedAndroidTools
        run: |
          git clone --depth 1 https://github.com/facebookexperimental/ExtendedAndroidTools.git src
          echo "SRC_DIR=$PWD/src" >> $GITHUB_ENV

      # 2) Dipendenze host identiche all'upstream
      - name: Install host dependencies
        run: sudo $SRC_DIR/scripts/jammy-install-deps.sh

      # 3) Scarica l'NDK (uguale all'upstream)
      - name: Download Android NDK
        run: $SRC_DIR/scripts/download-ndk.sh

      # 4) Build bpftools per arch
      - name: Build bpftools (${{ matrix.arch }})
        working-directory: ${{ env.SRC_DIR }}
        run: make bpftools NDK_PATH=$PWD/android-ndk-r27b NDK_ARCH=${{ matrix.arch }} THREADS=$(nproc)

      # 5) Copia output in dist/
      - name: Collect artifacts
        run: |
          mkdir -p dist
          cp $SRC_DIR/bpftools-${{ matrix.arch }}.tar.gz dist/

      # 6) Checksum (solo una volta)
      - name: Generate SHA256SUMS
        if: matrix.arch == 'arm64'
        run: |
          cd dist
          sha256sum bpftools-*.tar.gz > SHA256SUMS

      # 7) Artifact temporaneo (debug, 90 gg)
      - uses: actions/upload-artifact@v4
        with:
          name: bpftools-${{ matrix.arch }}
          path: dist/bpftools-${{ matrix.arch }}.tar.gz

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v4
        with: { path: dist }

      - name: Attach files to GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            dist/bpftools-arm64.tar.gz
            dist/SHA256SUMS
          generate_release_notes: true
