name: Build bpftools archive (arm64)

on:
  push:
    tags: [ 'v*' ]
  workflow_dispatch:

 # Consente al token integrato di scrivere la Release
permissions:         
  contents: write

jobs:
  build_bpftools:
    runs-on: ubuntu-22.04
    timeout-minutes: 300
    steps:
      # 0) Checkout
      - uses: actions/checkout@v4

      # 1) Swap: 4 GB             #
      - name: Add 4 GB swap
        run: |
          sudo fallocate -l 4G /swapfile
          sudo chmod 600 /swapfile
          sudo mkswap /swapfile
          sudo swapon /swapfile
          free -h

      # 2) Clona ExtendedAndroidTools in ./src (shallow)
      - name: Clone ExtendedAndroidTools
        run: git clone --depth 1 https://github.com/facebookexperimental/ExtendedAndroidTools.git src

      # 3) Dipendenze host
      - name: Install dependencies
        run: sudo ./src/scripts/jammy-install-deps.sh

      # 3-bis) Tool extra per autoreconf di flex (autopoint / gettext)
      - name: Extra build tools
        run: sudo apt-get update && sudo apt-get install -y autopoint gettext

      # 4) Scarica l’NDK (r27b di default)
      - name: Download NDK
        run: ./src/scripts/download-ndk.sh

      # 5) Build bpftools arm64 – keep-alive + trace + cleanup dopo hos
      - name: Build bpftools (arm64)
        working-directory: ./src
        env:
          # 1) flag di configure che elimina la suite di test
          PYTHON_CONFIGURE_EXTRA: "--disable-test-modules --with-ensurepip=no"
          # 2) -j1 **solo** per l'install di CPython host
          # es. lock /usr/bin/install -c -m 644 /home/runner/work/bpftools-builder/bpftools-builder/src/projects/python/sources/Lib/tkinter/test/test_tkinter/test_widgets.py /home/runner/work/bpftools-builder/bpftools-builder/src/out/host/lib/python3.10/tkinter/test/test_tkinter
          PYTHON_INSTALL_MAKEFLAGS: "-j1"
        run: |
          set -e
          set -x

          # keep-alive: ping ogni 5 min
          ( while true; do
              echo "::notice ::⏳ $(date -u) — build alive"
              sleep 300
            done ) &
          KEEP=$!

          export GIT_DEPTH=0          # clone completo per bpftrace

          NDK_DIR=$(ls -d ../android-ndk-*)
          echo "Using NDK_DIR=$NDK_DIR"

          make bpftools NDK_ARCH=arm64 NDK_PATH=$NDK_DIR THREADS=4

          # libera ~7 GB di build/host adesso che non serve più
          rm -rf build/host
          df -h .

          kill $KEEP
          cp bpftools-arm64.tar.gz $GITHUB_WORKSPACE/


      # 5-bis) Build bpftools-min arm64
      - name: Build bpftools-min (arm64)
        working-directory: ./src
        env:
          # 1) flag di configure che elimina la suite di test
          PYTHON_CONFIGURE_EXTRA: "--disable-test-modules --with-ensurepip=no"
          # 2) -j1 **solo** per l'install di CPython host
          PYTHON_INSTALL_MAKEFLAGS: "-j1"
        run: |
          set -e
          set -x

          ( while true; do
              echo "::notice ::⏳ $(date -u) — build alive"
              sleep 300
            done ) &
          KEEP=$!

          export GIT_DEPTH=0
          # clone completo per bpftrace

          NDK_DIR=$(ls -d ../android-ndk-*)
          echo "Using NDK_DIR=$NDK_DIR"

          make bpftools-min NDK_ARCH=arm64 NDK_PATH=$NDK_DIR THREADS=$(nproc)

          # libera ~7 GB di build/host adesso che non serve più
          rm -rf build/host
          df -h .

          kill $KEEP
          cp bpftools-min-arm64.tar.gz $GITHUB_WORKSPACE/

      # 6) SHA256
      - name: SHA256
        run: |
          cd $GITHUB_WORKSPACE
          sha256sum bpftools-arm64.tar.gz bpftools-min-arm64.tar.gz > SHA256SUMS

      # 7) Artifact temporaneo (debug)
      - uses: actions/upload-artifact@v4
        with:
          name: bpftools-arm64.tar.gz
          path: bpftools-arm64.tar.gz


      - uses: actions/upload-artifact@v4
        with:
          name: bpftools-min-arm64.tar.gz
          path: bpftools-min-arm64.tar.gz

      # 8) Asset permanente in Release (solo sui tag v*)
      - name: Upload Release asset
        if: startsWith(github.ref, 'refs/tags/v')
        uses: softprops/action-gh-release@v2
        with:
          files: |
            bpftools-arm64.tar.gz
            bpftools-min-arm64.tar.gz
            SHA256SUMS
          generate_release_notes: true
